(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{636:function(t,a,e){"use strict";e.r(a);var o=e(27),l=Object(o.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"日期与时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期与时间"}},[t._v("#")]),t._v(" 日期与时间")]),t._v(" "),e("p",[t._v("Date 对象表示日期和时间。如果不先将 Date 对象转换为适当格式的字符串，则不能显示或打印该对象。\n那么什么是「适当的」格式呢?")]),t._v(" "),e("ul",[e("li",[t._v("首先，格式应该符合最终用户 Locale 的约定。\n例如，德国人承认 "),e("code",[t._v("20.4.09")]),t._v(" 为有效日期，但美国人希望同样的日期是  "),e("code",[t._v("4/20/09")]),t._v("。")]),t._v(" "),e("li",[t._v("第二，格式应该包含必要的信息。\n例如，一个测量网络性能的程序可能会报告运行的毫秒数。\n在线约会日历可能不会显示毫秒，但会显示星期几。")])]),t._v(" "),e("p",[t._v("本节解释如何以各种方式和对 Locale 敏感的方式格式化日期和时间。\n如果遵循这些技术，程序将在适当的 Locale 中显示日期和时间，但源代码将独立于任何特定的 Locale。")]),t._v(" "),e("ul",[e("li",[e("p",[e("RouterLink",{attrs:{to:"/i18n/format/dateFormat.html"}},[t._v("使用预定义格式")])],1),t._v(" "),e("p",[t._v("DateFormat 类提供了预定义的格式化样式，这些样式特定于 Locale，易于使用。")])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/i18n/format/simpleDateFormat.html"}},[t._v("自定义格式")])],1),t._v(" "),e("p",[t._v("使用 SimpleDateFormat 类，您可以创建定制的、特定于 Locale 的格式。")])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/i18n/format/dateFormatSymbols.html"}},[t._v("更改日期格式符号")])],1),t._v(" "),e("p",[t._v("使用 DateFormatSymbols 类，可以更改表示月份名称、星期名称和其他格式化元素的符号。")])])])])}),[],!1,null,null,null);a.default=l.exports}}]);